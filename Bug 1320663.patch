# HG changeset patch
# User Aman Dwivedi <dwivedi.aman96@gmail.com>
# Date 1483438481 -19800
#      Tue Jan 03 15:44:41 2017 +0530
# Node ID 2f10659f7810f5ed2c1c14af00b5ad2949aed935
# Parent  c91249f41e3766274131a84f9157a4d9d9949520
Bug 1320663 - Stop using timers in PrivateBrowsingUtils.jsm, r=mikedeboer.

diff --git a/docshell/test/chrome/test_private_hidden_window.html b/docshell/test/chrome/test_private_hidden_window.html
--- a/docshell/test/chrome/test_private_hidden_window.html
+++ b/docshell/test/chrome/test_private_hidden_window.html
@@ -29,7 +29,23 @@ var mainWindow = window.QueryInterface(C
 // We need to wait for the hidden window to load, but can't access
 // an event target for a regular event listener.
 var hidden = mainWindow.Services.appShell.hiddenPrivateDOMWindow;
-mainWindow.PrivateBrowsingUtils.whenHiddenPrivateWindowReady(function(hidden) {
+
+function isNotLoaded() {
+  return ["complete", "interactive"].indexOf(hidden.document.readyState) == -1;
+}
+if (isNotLoaded()) {
+  setTimeout(function poll() {
+    if (isNotLoaded()) {
+      setTimeout(poll, 100);
+      return;
+    }
+    onHiddenPrivateWindowReady();
+  }, 4);
+} else {
+  onHiddenPrivateWindowReady();
+}
+
+function onHiddenPrivateWindowReady() {
   var iframe = hidden.document.createElement('iframe');
   iframe.src = 'generic.html';
   hidden.document.body.appendChild(iframe);
@@ -40,7 +56,7 @@ mainWindow.PrivateBrowsingUtils.whenHidd
     win.close();
     win = null;
   }, false);
-});
+}
 
 function observer(aSubject, aTopic, aData) {
   is(aTopic, "last-pb-context-exited", "Unexpected observer topic");
diff --git a/toolkit/modules/PrivateBrowsingUtils.jsm b/toolkit/modules/PrivateBrowsingUtils.jsm
--- a/toolkit/modules/PrivateBrowsingUtils.jsm
+++ b/toolkit/modules/PrivateBrowsingUtils.jsm
@@ -79,25 +79,5 @@ this.PrivateBrowsingUtils = {
   get isInTemporaryAutoStartMode() {
     return gTemporaryAutoStartMode;
   },
-
-  whenHiddenPrivateWindowReady: function pbu_whenHiddenPrivateWindowReady(cb) {
-    Components.utils.import("resource://gre/modules/Timer.jsm");
-
-    let win = Services.appShell.hiddenPrivateDOMWindow;
-    function isNotLoaded() {
-      return ["complete", "interactive"].indexOf(win.document.readyState) == -1;
-    }
-    if (isNotLoaded()) {
-      setTimeout(function poll() {
-        if (isNotLoaded()) {
-          setTimeout(poll, 100);
-          return;
-        }
-        cb(Services.appShell.hiddenPrivateDOMWindow);
-      }, 4);
-    } else {
-      cb(Services.appShell.hiddenPrivateDOMWindow);
-    }
-  }
 };
 
